// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/gin-gonic/gin"
	"github.com/thangpham4/self-project/apps/server"
	"github.com/thangpham4/self-project/handlers"
	"github.com/thangpham4/self-project/infra"
	"github.com/thangpham4/self-project/pkg/kvredis"
	"github.com/thangpham4/self-project/repo/cache"
	"github.com/thangpham4/self-project/repo/mysql"
	"github.com/thangpham4/self-project/services"
)

// Injectors from wire.go:

func BuildServer(contextContext context.Context) (*gin.Engine, error) {
	redisConfig := infra.NewRedisConfig()
	client, err := infra.NewRedisClient(contextContext, redisConfig)
	if err != nil {
		return nil, err
	}
	kvRedisImpl := kvredis.NewKVRedis(client)
	db, err := infra.NewMySQLConnection()
	if err != nil {
		return nil, err
	}
	mockMysql := mysql.NewMockMysql(db)
	mockCache := cache.NewMockCache(kvRedisImpl, mockMysql)
	mockService := services.NewMockService(mockCache)
	mockHandler := handlers.NewMockHandler(mockService)
	userAdminMysql := mysql.NewUserAdminMysql(db)
	userAdminService := services.NewUserAdminService(userAdminMysql)
	userAdminHandler := handlers.NewUserAdminHandler(userAdminService)
	productInfoMysql := mysql.NewProductInfoMysql(db)
	productInfoCache := cache.NewProductInfoCache(kvRedisImpl, productInfoMysql)
	productInfoService := services.NewProductInfoService(productInfoCache)
	productInfoHandler := handlers.NewProductInfoHandler(productInfoService)
	engine := server.NewHTTPserver(mockHandler, userAdminHandler, productInfoHandler)
	return engine, nil
}
